- apiVersion: core.oam.dev/v1alpha2
  kind: ApplicationConfiguration
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: boutique
    namespace: default
  spec:
    components:
    - componentName: frontend
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: frontend
              app.oam.dev/component: frontend
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: frontend
          spec:
            ports:
            - name: http
              port: 80
              targetPort: 8080
            selector:
              app: frontend
            type: ClusterIP
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app.oam.dev/component: frontend
              app.oam.dev/name: boutique
              trait.oam.dev/resource: loadbalancer
              trait.oam.dev/type: load-balancer
            name: frontend-external
          spec:
            ports:
            - name: http
              port: 80
              targetPort: 8080
            selector:
              app: frontend
            type: LoadBalancer
    - componentName: cartservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: cartservice
              app.oam.dev/component: cartservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: cartservice
          spec:
            ports:
            - name: grpc
              port: 7070
              targetPort: 7070
            selector:
              app: cartservice
            type: ClusterIP
    - componentName: productcatalogservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: productcatalogservice
              app.oam.dev/component: productcatalogservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: productcatalogservice
          spec:
            ports:
            - name: grpc
              port: 3550
              targetPort: 3550
            selector:
              app: productcatalogservice
            type: ClusterIP
    - componentName: currencyservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: currencyservice
              app.oam.dev/component: currencyservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: currencyservice
          spec:
            ports:
            - name: grpc
              port: 7000
              targetPort: 7000
            selector:
              app: currencyservice
            type: ClusterIP
    - componentName: paymentservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: paymentservice
              app.oam.dev/component: paymentservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: paymentservice
          spec:
            ports:
            - name: grpc
              port: 50051
              targetPort: 50051
            selector:
              app: paymentservice
            type: ClusterIP
    - componentName: shippingservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: shippingservice
              app.oam.dev/component: shippingservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: shippingservice
          spec:
            ports:
            - name: grpc
              port: 50051
              targetPort: 50051
            selector:
              app: shippingservice
            type: ClusterIP
    - componentName: emailservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: emailservice
              app.oam.dev/component: emailservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: emailservice
          spec:
            ports:
            - name: grpc
              port: 5000
              targetPort: 8080
            selector:
              app: emailservice
            type: ClusterIP
    - componentName: checkoutservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: checkoutservice
              app.oam.dev/component: checkoutservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: checkoutservice
          spec:
            ports:
            - name: grpc
              port: 5050
              targetPort: 5050
            selector:
              app: checkoutservice
            type: ClusterIP
    - componentName: recommendationservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: recommendationservice
              app.oam.dev/component: recommendationservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: recommendationservice
          spec:
            ports:
            - name: grpc
              port: 8080
              targetPort: 8080
            selector:
              app: recommendationservice
            type: ClusterIP
    - componentName: adservice
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: adservice
              app.oam.dev/component: adservice
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: adservice
          spec:
            ports:
            - name: grpc
              port: 9555
              targetPort: 9555
            selector:
              app: adservice
            type: ClusterIP
    - componentName: loadgenerator
    - componentName: redis-cart
      traits:
      - trait:
          apiVersion: v1
          kind: Service
          metadata:
            labels:
              app: redis-cart
              app.oam.dev/component: redis-cart
              app.oam.dev/name: boutique
              trait.oam.dev/resource: service
              trait.oam.dev/type: AuxiliaryWorkload
            name: redis-cart
          spec:
            ports:
            - name: redis
              port: 6379
              targetPort: 6379
            selector:
              app: redis-cart
            type: ClusterIP
  status:
    dependency: {}
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: frontend
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: frontend
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: frontend
      spec:
        selector:
          matchLabels:
            app: frontend
        template:
          metadata:
            annotations:
              sidecar.istio.io/rewriteAppHTTPProbers: "true"
            labels:
              app: frontend
          spec:
            containers:
            - env:
              - name: AD_SERVICE_ADDR
                value: adservice:9555
              - name: CART_SERVICE_ADDR
                value: cartservice:7070
              - name: CHECKOUT_SERVICE_ADDR
                value: checkoutservice:5050
              - name: CURRENCY_SERVICE_ADDR
                value: currencyservice:7000
              - name: PORT
                value: "8080"
              - name: PRODUCT_CATALOG_SERVICE_ADDR
                value: productcatalogservice:3550
              - name: RECOMMENDATION_SERVICE_ADDR
                value: recommendationservice:8080
              - name: SHIPPING_SERVICE_ADDR
                value: shippingservice:50051
              image: gcr.io/google-samples/microservices-demo/frontend:v0.2.2
              livenessProbe:
                httpGet:
                  httpHeaders:
                  - name: Cookie
                    value: shop_session-id=x-liveness-probe
                  path: /_healthz
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
              name: server
              ports:
              - containerPort: 8080
              readinessProbe:
                httpGet:
                  httpHeaders:
                  - name: Cookie
                    value: shop_session-id=x-readiness-probe
                  path: /_healthz
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: cartservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: cartservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: cartservice
      spec:
        selector:
          matchLabels:
            app: cartservice
        template:
          metadata:
            labels:
              app: cartservice
          spec:
            containers:
            - env:
              - name: REDIS_ADDR
                value: redis-cart:6379
              image: gcr.io/google-samples/microservices-demo/cartservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:7070
                  - -rpc-timeout=5s
                initialDelaySeconds: 15
                periodSeconds: 10
              name: server
              ports:
              - containerPort: 7070
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:7070
                  - -rpc-timeout=5s
                initialDelaySeconds: 15
                periodSeconds: 10
              resources:
                limits:
                  cpu: 300m
                  memory: 128Mi
                requests:
                  cpu: 200m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: productcatalogservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: productcatalogservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: productcatalogservice
      spec:
        selector:
          matchLabels:
            app: productcatalogservice
        template:
          metadata:
            labels:
              app: productcatalogservice
          spec:
            containers:
            - env:
              - name: PORT
                value: "3550"
              image: gcr.io/google-samples/microservices-demo/productcatalogservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:3550
                initialDelaySeconds: 0
                periodSeconds: 10
              name: server
              ports:
              - containerPort: 3550
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:3550
                initialDelaySeconds: 0
                periodSeconds: 10
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: currencyservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: currencyservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: currencyservice
      spec:
        selector:
          matchLabels:
            app: currencyservice
        template:
          metadata:
            labels:
              app: currencyservice
          spec:
            containers:
            - env:
              - name: PORT
                value: "7000"
              image: gcr.io/google-samples/microservices-demo/currencyservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:7000
                initialDelaySeconds: 0
                periodSeconds: 10
              name: server
              ports:
              - containerPort: 7000
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:7000
                initialDelaySeconds: 0
                periodSeconds: 10
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: paymentservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: paymentservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: paymentservice
      spec:
        selector:
          matchLabels:
            app: paymentservice
        template:
          metadata:
            labels:
              app: paymentservice
          spec:
            containers:
            - env:
              - name: PORT
                value: "50051"
              image: gcr.io/google-samples/microservices-demo/paymentservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:50051
                initialDelaySeconds: 0
                periodSeconds: 10
              name: server
              ports:
              - containerPort: 50051
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:50051
                initialDelaySeconds: 0
                periodSeconds: 10
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: shippingservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: shippingservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: shippingservice
      spec:
        selector:
          matchLabels:
            app: shippingservice
        template:
          metadata:
            labels:
              app: shippingservice
          spec:
            containers:
            - env:
              - name: PORT
                value: "50051"
              image: gcr.io/google-samples/microservices-demo/shippingservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:50051
                initialDelaySeconds: 0
                periodSeconds: 10
              name: server
              ports:
              - containerPort: 50051
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:50051
                initialDelaySeconds: 0
                periodSeconds: 10
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: emailservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: emailservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: emailservice
      spec:
        selector:
          matchLabels:
            app: emailservice
        template:
          metadata:
            labels:
              app: emailservice
          spec:
            containers:
            - env:
              - name: DISABLE_PROFILER
                value: "1"
              - name: PORT
                value: "8080"
              image: gcr.io/google-samples/microservices-demo/emailservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:8080
                initialDelaySeconds: 0
                periodSeconds: 5
              name: server
              ports:
              - containerPort: 8080
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:8080
                initialDelaySeconds: 0
                periodSeconds: 5
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: checkoutservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: checkoutservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: checkoutservice
      spec:
        selector:
          matchLabels:
            app: checkoutservice
        template:
          metadata:
            labels:
              app: checkoutservice
          spec:
            containers:
            - env:
              - name: CART_SERVICE_ADDR
                value: cartservice:7070
              - name: CURRENCY_SERVICE_ADDR
                value: currencyservice:7000
              - name: EMAIL_SERVICE_ADDR
                value: emailservice:5000
              - name: PAYMENT_SERVICE_ADDR
                value: paymentservice:50051
              - name: PORT
                value: "5050"
              - name: PRODUCT_CATALOG_SERVICE_ADDR
                value: productcatalogservice:3550
              - name: SHIPPING_SERVICE_ADDR
                value: shippingservice:50051
              image: gcr.io/google-samples/microservices-demo/checkoutservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:5050
                initialDelaySeconds: 0
                periodSeconds: 5
              name: server
              ports:
              - containerPort: 5050
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:5050
                initialDelaySeconds: 0
                periodSeconds: 5
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: recommendationservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: recommendationservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: recommendationservice
      spec:
        selector:
          matchLabels:
            app: recommendationservice
        template:
          metadata:
            labels:
              app: recommendationservice
          spec:
            containers:
            - env:
              - name: PORT
                value: "8080"
              - name: PRODUCT_CATALOG_SERVICE_ADDR
                value: productcatalogservice:3550
              image: gcr.io/google-samples/microservices-demo/recommendationservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:8080
                initialDelaySeconds: 0
                periodSeconds: 5
              name: server
              ports:
              - containerPort: 8080
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:8080
                initialDelaySeconds: 0
                periodSeconds: 5
              resources:
                limits:
                  cpu: 200m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 64Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: adservice
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: adservice
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: adservice
      spec:
        selector:
          matchLabels:
            app: adservice
        template:
          metadata:
            labels:
              app: adservice
          spec:
            containers:
            - env:
              - name: PORT
                value: "9555"
              image: gcr.io/google-samples/microservices-demo/adservice:v0.2.2
              livenessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:9555
                initialDelaySeconds: 20
                periodSeconds: 15
              name: server
              ports:
              - containerPort: 9555
              readinessProbe:
                exec:
                  command:
                  - /bin/grpc_health_probe
                  - -addr=:9555
                initialDelaySeconds: 20
                periodSeconds: 15
              resources:
                limits:
                  cpu: 300m
                  memory: 300Mi
                requests:
                  cpu: 200m
                  memory: 180Mi
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: loadgenerator
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: loadgenerator
          app.oam.dev/name: boutique
          workload.oam.dev/type: enhanced-worker
        name: loadgenerator
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: loadgenerator
        template:
          metadata:
            labels:
              app: loadgenerator
          spec:
            containers:
            - env:
              - name: FRONTEND_ADDR
                value: frontend:80
              - name: USERS
                value: "10"
              image: gcr.io/google-samples/microservices-demo/loadgenerator:v0.2.2
              name: server
              resources:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 300m
                  memory: 256Mi
            restartPolicy: Always
            serviceAccountName: default
            terminationGracePeriodSeconds: 30
  status:
    observedGeneration: 0
- apiVersion: core.oam.dev/v1alpha2
  kind: Component
  metadata:
    creationTimestamp: null
    labels:
      app.oam.dev/name: boutique
    name: redis-cart
    namespace: default
  spec:
    workload:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.oam.dev/component: redis-cart
          app.oam.dev/name: boutique
          workload.oam.dev/type: microservice
        name: redis-cart
      spec:
        selector:
          matchLabels:
            app: redis-cart
        template:
          metadata:
            annotations:
              sidecar.istio.io/rewriteAppHTTPProbers: "true"
            labels:
              app: redis-cart
          spec:
            containers:
            - env: []
              image: redis:alpine
              livenessProbe:
                initialDelaySeconds: 0
                periodSeconds: 5
                tcpSocket:
                  port: 6379
              name: redis
              ports:
              - containerPort: 6379
              readinessProbe:
                initialDelaySeconds: 0
                periodSeconds: 5
                tcpSocket:
                  port: 6379
              resources:
                limits:
                  cpu: 125m
                  memory: 256Mi
                requests:
                  cpu: 70m
                  memory: 200Mi
              volumeMounts:
              - mountPath: /data
                name: redis-data
            serviceAccountName: default
            terminationGracePeriodSeconds: 5
            volumes:
            - emptyDir: {}
              name: redis-data
  status:
    observedGeneration: 0

